vec3[] vertices
int sampleCount = 3
int iterations
float thresholdDistance
float inlierRatio

int currentIteration = 0;
int bestInlierCount = 0;
float bestIntercept;
vec3 bestDirection;
while (currentIteration++ < iterations) {
	vec3 sample[3] = getRand(vertices, sampleCount);
	vec3 direction = cross(sample[0] - sample[1], sample[2] - sample[1]);
	float intercept = -dot(direction, sample[0]);
	vec3 normal = normalize(direction);
	vec3 inliers[];
	for (int i = 0; i < vertices.size(); i++) {
		distance = abs(dot(normal, vertices[i]) + intercept);
		if (distance < thresholdDistance) inliers.push(vertices[i]);
	}
	if (inliers.size() > inlierRatio && inliers.size() > bestInlierCount) {
		bestInlierCount = inliers.size();
		bestIntercept = intercept;
		bestDirection = direction;
	}
}